apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {

    compileSdkVersion configs.android.compileSdkVersion
    buildToolsVersion configs.android.buildToolsVersion

    compileOptions {
        sourceCompatibility configs.compile.sourceCompatibility
        targetCompatibility configs.compile.targetCompatibility
    }

    defaultConfig {

        //multi dex
        multiDexEnabled true

        applicationId "example.androidmodulararchiteture"
        minSdkVersion configs.android.minSdkVersion
        targetSdkVersion configs.android.targetSdkVersion
        versionCode configs.android.versionCode
        versionName configs.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //arouter request
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file("../app.keystore")
            storePassword "android"
            keyAlias "key0"
            keyPassword "android"
        }
        release {
            storeFile file("../app.keystore")
            storePassword "android"
            keyAlias "key0"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            useProguard true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    //渠道定义，渠道太多的话建议使用美团方案
    flavorDimensions 'version'
    productFlavors {
        YingYongBao {
            manifestPlaceholders = [CHANNEL: "YingYongBao"]
            //提供代码层获取渠道的能力
            buildConfigField "String", "CHANNEL", "\"YingYongBao\""
            //支持多包名
            //applicationId "com.xxx.xxx"
        }
        XiaoMi {
            manifestPlaceholders = [CHANNEL: "XiaoMi"]
            buildConfigField "String", "CHANNEL", "\"XiaoMi\""
        }
        HuaWei {
            manifestPlaceholders = [CHANNEL: "HuaWei"]
            buildConfigField "String", "CHANNEL", "\"HuaWei\""
        }
    }

    resourcePrefix "app_"

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':libBase')
}
repositories {
    mavenCentral()
}





